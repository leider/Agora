extends ../../../views/layout
include ../../members/views/memberlist-mixin
include ../../../views/openstreetmaps-component
include ../../../views/formComponents
include activities-mixins

block title
  | #{activity.title()} - #{t('activities.activities')}

block opengraph
  meta(property='og:description', content=activity.descriptionPlain().substring(0,500))
  meta(property='og:title', content=activity.title())

block content
  .row
    .col-12
      .page-header
        .float-end.d-print-flex.d-none
          img(height='80px', src='/qrcode?url=' + encodeURIComponent(activity.fullyQualifiedUrl()))
        .btn-group.float-end
          a.btn.btn-light(href='/activities/ical/' + encodeURIComponent(activity.url()), title=t('activities.export')): i.fa-regular.fa-calendar-alt.fa-fw
          a.btn.btn-light(href='/wiki/' + activity.blogEntryUrl(), title=t('activities.blog_entry')): i.fa-solid.fa-pen-nib.fa-fw
          if (accessrights.canCreateActivity())
            a.btn.btn-light(href='/activities/newLike/' + encodeURIComponent(activity.url()), title=t('activities.new_copy')): i.fa-regular.fa-copy.fa-fw
          if (accessrights.canEditActivity(activity))
            a.btn.btn-light(href='/waitinglist/' + encodeURIComponent(activity.url()), title=t('activities.waitinglist')): i.fa-regular.fa-clock.fa-fw
            a.btn.btn-light(href='/mailsender/invitation/' + encodeURIComponent(activity.url()), title=t('activities.invitation')): i.fa-regular.fa-envelope.fa-fw
            a.btn.btn-light(href='/activities/edit/' + encodeURIComponent(activity.url()), title=t('general.edit')): i.fa-regular.fa-pen-to-square.fa-fw
          if (accessrights.canDeleteActivity(activity))
            -var deleteoptions = {url: '/activities/delete', params: {activityUrl: activity.url()}}
            +reallyDeleteModalPost('activities.delete', deleteoptions)
        h2 #{activity.title()}
          br
          small #{activity.startDateTime().setLocale(language).toLocaleString(DateTime.DATE_FULL)} (#{activity.startDateTime().setLocale(language).toLocaleString(DateTime.TIME_24_SIMPLE)}
            if (activity.isMultiDay())
              | ) - #{activity.endDateTime().setLocale(language).toLocaleString(DateTime.DATE_FULL)} (#{activity.endDateTime().setLocale(language).toLocaleString(DateTime.TIME_24_SIMPLE)})
            else
              |  - #{activity.endDateTime().setLocale(language).toLocaleString(DateTime.TIME_24_SIMPLE)})
      | !{activity.descriptionHTML()}
      hr
  .row
    .col-md-6
      h3 #{t('general.address')}:
      p #{activity.location()}
      if (activity.hasDirection())
        h4 #{t('activities.directions')}:
        | !{activity.directionHTML()}
      hr
      .d-print-none
        if (allowsRegistration)
          p #{t('activities.count_participants_interval', { postProcess: 'interval', count: activity.participants.length })}
        if (activity.clonedFromMeetup())
          p (#{t('activities.count_participants_meetup_interval', {postProcess: 'interval', count: activity.meetupRSVPCount()})})
        +subscriptionButtons(activity, resourceRegistrationRenderer)
        if (accessrights.isRegistered() && activity.participants.length > 0)
          h4.mt-3 #{t('activities.accepted_by')}:
          +memberlist(activity.participants)

      if (activity.group)
        hr.hidden-print
        p.hidden-print #{t('activities.organized_by')}&nbsp;
          a(href='/groups/' + activity.group.id) #{activity.group.longName}
          if(accessrights.isRegistered() && activity.ownerNickname)
            | &nbsp;- #{t('activities.created_by')}&nbsp;
            a(href='/members/' + activity.ownerNickname) #{activity.ownerNickname}
          if(accessrights.isRegistered() && editorNicknames && editorNicknames.length > 0)
            | &nbsp;- #{t('activities.editors')}:
            each editor in editorNicknames
              | &nbsp;
              a(href='/members/' + editor) #{editor}
    .col-md-6
      #map.hidden-print(style='width: ' + '100%' + '; height: ' + '450px')

block scripts
  +map(activity.location())
  script.
    displayedActivityStart = '#{activity.startDateTime().toISO()}';
//- cannot write "#{activity.startDateTime()}" as we need to produce a string to eval in the client
